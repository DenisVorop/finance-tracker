// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(dbgenerated("timezone('utc'::text, now())"))
  amount      Decimal
  category    String
  billId      Int
  createdAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  updatedAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @updatedAt
  description String?
  bill        Bill     @relation(fields: [billId], references: [id], onDelete: Cascade)
}

model Bill {
  id              Int           @id @default(autoincrement())
  name            String
  type            BillType
  backgroundColor String
  emoji           String
  description     String?
  balance         Decimal       @default(0.00)
  includeInTotal  Boolean       @default(true)
  userId          Int
  createdAt       DateTime      @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  updatedAt       DateTime      @default(dbgenerated("timezone('utc'::text, now())")) @updatedAt
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions    Transaction[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  updatedAt DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @updatedAt
  Bill      Bill[]
  sessions  Session[]
}

model Session {
  id           String   @id @default(uuid())
  userId       Int
  accessToken  String   @unique
  refreshToken String   @unique
  expiresAt    DateTime
  createdAt    DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum BillType {
  REGULAR
  SAVINGS
  DEBT_OWE
  DEBT_LEND
}
